[{"/Users/fadhlika/Repos/tanoshi/web/src/index.js":"1","/Users/fadhlika/Repos/tanoshi/web/src/BrowseSources.js":"2","/Users/fadhlika/Repos/tanoshi/web/src/Reader.js":"3","/Users/fadhlika/Repos/tanoshi/web/src/SettingSources.js":"4","/Users/fadhlika/Repos/tanoshi/web/src/common/Navbar.js":"5","/Users/fadhlika/Repos/tanoshi/web/src/SettingSource.js":"6","/Users/fadhlika/Repos/tanoshi/web/src/BrowseSource.js":"7","/Users/fadhlika/Repos/tanoshi/web/src/SettingCategories.js":"8","/Users/fadhlika/Repos/tanoshi/web/src/App.js":"9","/Users/fadhlika/Repos/tanoshi/web/src/Library.js":"10","/Users/fadhlika/Repos/tanoshi/web/src/common/Topbar.js":"11","/Users/fadhlika/Repos/tanoshi/web/src/Manga.js":"12","/Users/fadhlika/Repos/tanoshi/web/src/Browse.js":"13","/Users/fadhlika/Repos/tanoshi/web/src/common/Cover.js":"14"},{"size":500,"mtime":1611578582352,"results":"15","hashOfConfig":"16"},{"size":1673,"mtime":1611704025566,"results":"17","hashOfConfig":"16"},{"size":5567,"mtime":1611662938036,"results":"18","hashOfConfig":"16"},{"size":2191,"mtime":1611742378704,"results":"19","hashOfConfig":"16"},{"size":4228,"mtime":1611672155622,"results":"20","hashOfConfig":"16"},{"size":5006,"mtime":1611755743323,"results":"21","hashOfConfig":"16"},{"size":2240,"mtime":1611802101108,"results":"22","hashOfConfig":"16"},{"size":477,"mtime":1611742226237,"results":"23","hashOfConfig":"16"},{"size":1014,"mtime":1611742361020,"results":"24","hashOfConfig":"16"},{"size":1987,"mtime":1611802108117,"results":"25","hashOfConfig":"16"},{"size":381,"mtime":1611671135771,"results":"26","hashOfConfig":"16"},{"size":5933,"mtime":1611799325555,"results":"27","hashOfConfig":"16"},{"size":657,"mtime":1611799722173,"results":"28","hashOfConfig":"16"},{"size":2130,"mtime":1611803591740,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1jil56f",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/fadhlika/Repos/tanoshi/web/src/index.js",[],["60","61"],"/Users/fadhlika/Repos/tanoshi/web/src/BrowseSources.js",[],"/Users/fadhlika/Repos/tanoshi/web/src/Reader.js",["62","63"],"/Users/fadhlika/Repos/tanoshi/web/src/SettingSources.js",[],"/Users/fadhlika/Repos/tanoshi/web/src/common/Navbar.js",[],"/Users/fadhlika/Repos/tanoshi/web/src/SettingSource.js",["64"],"import React from 'react';\nimport { useNavigate } from \"@reach/router\"\n\nfunction Input(props) {\n    const render = () => {\n        switch (typeof props.val) {\n            case 'boolean':\n                return (\n                    <div className=\"relative inline-block w-10 mr-2 align-middle select-none transition duration-200 ease-in\">\n                        <input type=\"checkbox\" name=\"toggle\" id={props.id} className=\"toggle-checkbox absolute block w-6 h-6 rounded-full bg-white border-1 appearance-none cursor-pointer\" onChange={(e) => props.onChange(e.target.checked)} />\n                        <label htmlFor=\"toggle\" className=\"toggle-label block overflow-hidden h-6 rounded-full bg-gray-300 cursor-pointer shadow\"></label>\n                    </div>\n                )\n            default:\n                return \"\"\n        }\n    }\n\n    return (\n        <div className={\"flex justify-between py-2\"}>\n            <label htmlFor={props.id} className={\"toggle-label my-auto mx-2\"}>{props.label}</label>\n            {render()}\n        </div>\n    )\n}\n\nfunction SettingSource(props) {\n    const [username, setUsername] = React.useState(\"\");\n    const [password, setPassword] = React.useState(\"\");\n    const [twoFactor, setTwoFactor] = React.useState(\"\");\n    const [remember, setRemember] = React.useState(false);\n    const [config, setConfig] = React.useState();\n\n    const navigate = useNavigate();\n\n    React.useEffect(() => {\n        if (!config) {\n            fetch(`/api/source/${props.sourceName.toLowerCase()}/config`)\n                .then((response) => response.json())\n                .then(data => setConfig(data))\n                .catch((e) => {\n                    console.log(e);\n                });\n        }\n    }, [props.sourceName])\n\n    const login = () => {\n        if (username === \"\" || password === \"\") {\n            return\n        }\n\n        fetch(`/api/source/${props.sourceName.toLowerCase()}/login`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                Username: username,\n                Password: password,\n                TwoFactor: twoFactor,\n                Remember: remember\n            })\n        })\n            .then((response) => navigate(`/browse/${props.sourceName}`, { replace: true }))\n            .catch((e) => {\n                console.log(e);\n            });\n    }\n\n    const save = () => {\n        fetch(`/api/source/${props.sourceName.toLowerCase()}/config`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(config)\n        })\n            .then((response) => response)\n            .catch((e) => {\n                console.log(e);\n            });\n    }\n\n    return (\n        <div className={\"p-2\"}>\n            <div className={\"rounded shadow flex flex-col m-auto bg-white my-1\"}>\n                <h1 className={\"m-2 text-left\"}>Login</h1>\n                <input id=\"username\" className={\"focus:outline-none mx-2 my-1 p-1 border border-gray-100 h-8\"} type=\"text\" placeholder=\"Username\" onChange={(e) => setUsername(e.target.value)}></input>\n                <input id=\"password\" className={\"focus:outline-none mx-2 my-1 p-1 border border-gray-100 h-8\"} type=\"password\" placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)}></input>\n                <input id=\"two_factor\" className={\"focus:outline-none mx-2 my-1 p-1 border border-gray-100 h-8\"} type=\"two_factor\" placeholder=\"Two Factor\" onChange={(e) => setTwoFactor(e.target.value)}></input>\n                <div className={\"inline-flex\"}>\n                    <input id=\"remember-me\" className={\"focus:outline-none mx-2 my-1 p-1 border border-gray-100 h-8\"} type=\"checkbox\" placeholder=\"Remember Me\" onChange={(e) => setRemember(e.target.checked)}></input>\n                    <label htmlFor={\"remember-me\"} className={\"my-auto mx-2\"}>Remember Me</label>\n                </div>\n                <button className={\"py-2 hover:bg-gray-100 text-accent\"} onClick={() => login()}>Submit</button>\n            </div>\n            <div className={\"pb-safe-bottom-scroll\"}>\n                {config && Object.keys(config).map((type) => (\n                    <div key={type} className={\"rounded shadow flex flex-col m-auto bg-white divide-y-2 dark:divide-gray-900 divide-gray-100\"}>\n                        <h1 className={\"m-2 text-left\"}>{type}</h1>\n                        {Object.keys(config[type]).map((k) => (\n                            <Input key={k} id={`${type}-${k}`} label={k} val={config[type][k]} onChange={(value) => { const cfg = Object.assign({}, config); cfg[type][k] = value; setConfig(cfg) }} />\n                        ))}\n                        <button className={\"py-2 hover:bg-gray-100 text-accent\"} onClick={() => save()}>Submit</button>\n                    </div>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default SettingSource;","/Users/fadhlika/Repos/tanoshi/web/src/BrowseSource.js",["65"],"/Users/fadhlika/Repos/tanoshi/web/src/SettingCategories.js",[],"/Users/fadhlika/Repos/tanoshi/web/src/App.js",[],"/Users/fadhlika/Repos/tanoshi/web/src/Library.js",["66"],"/Users/fadhlika/Repos/tanoshi/web/src/common/Topbar.js",[],"/Users/fadhlika/Repos/tanoshi/web/src/Manga.js",[],"/Users/fadhlika/Repos/tanoshi/web/src/Browse.js",["67"],"/Users/fadhlika/Repos/tanoshi/web/src/common/Cover.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":44,"column":10,"nodeType":"74","messageId":"75","endLine":44,"endColumn":24},{"ruleId":"72","severity":1,"message":"76","line":55,"column":10,"nodeType":"74","messageId":"75","endLine":55,"endColumn":22},{"ruleId":"77","severity":1,"message":"78","line":45,"column":8,"nodeType":"79","endLine":45,"endColumn":26,"suggestions":"80"},{"ruleId":"77","severity":1,"message":"81","line":28,"column":8,"nodeType":"79","endLine":28,"endColumn":23,"suggestions":"82"},{"ruleId":"77","severity":1,"message":"83","line":28,"column":8,"nodeType":"79","endLine":28,"endColumn":17,"suggestions":"84"},{"ruleId":"72","severity":1,"message":"85","line":4,"column":10,"nodeType":"74","messageId":"75","endLine":4,"endColumn":16},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'VerticalReader' is defined but never used.","Identifier","unusedVar","'SingleReader' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'config'. Either include it or remove the dependency array.","ArrayExpression",["88"],"React Hook React.useEffect has missing dependencies: 'mangaList' and 'props.sourceName'. Either include them or remove the dependency array. You can also do a functional update 'setMangaList(m => ...)' if you only need 'mangaList' in the 'setMangaList' call.",["89"],"React Hook React.useEffect has a missing dependency: 'mangaList'. Either include it or remove the dependency array. You can also do a functional update 'setMangaList(m => ...)' if you only need 'mangaList' in the 'setMangaList' call.",["90"],"'Search' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},"Update the dependencies array to be: [config, props.sourceName]",{"range":"97","text":"98"},"Update the dependencies array to be: [keyword, mangaList, page, props.sourceName]",{"range":"99","text":"100"},"Update the dependencies array to be: [keyword, mangaList]",{"range":"101","text":"102"},[1738,1756],"[config, props.sourceName]",[1101,1116],"[keyword, mangaList, page, props.sourceName]",[1009,1018],"[keyword, mangaList]"]